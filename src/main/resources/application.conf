explorer {
  parseSettings {
    nodes = []
    recoverBatchSize = 15
    infinitePing = true # if set to true, explorer will continue to ping node infinetely, otherwise it stops after #numberOfAttempts attempts
    askNode = false     # if set false, explorer won't ping the node if it stopped working
  }
  blackListSettings {
    banTime = 60m
    cleanupTime = 5s
  }
  databaseSettings {
    host = ""
    user = ""
    password = ""
    maxPoolSize = 5
    connectionTimeout = 60000
  }
  networkSettings {
    syncPacketLength = 1000
    bindAddressHost = "0.0.0.0"
    bindAddressPort = 0
    nodeName = "explorer"
    appVersion = 0.9.3
    handshakeTimeout = 1m
    peerForConnectionHost = ""
    peerForConnectionPort = 9001
    peerForConnectionApiPort = 9051
    declaredAddressHost = ""
    declaredAddressPort = 0
  }
  multisigSettings {
    checkTxMinedPeriod        = 30
    numberOfBlocksToCheck     = 3
    mnemonicKeys              = []
  }
  ntpSettings {
    server = "pool.ntp.org"
    updateEvery = 30m
    timeout = 30s
  }
  frontendSettings {
    host = ""
    port = 5150
  }
}

parser-dispatcher {
  type = Dispatcher
  executor = "thread-pool-executor"
  thread-pool-executor.fixed-pool-size = 2
  throughput = 1
}
blocking-dispatcher {
  type = Dispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {
    fixed-pool-size = 4
  }
  throughput = 1
}

akka {
  log-dead-letters = 0
  log-dead-letters-during-shutdown = off
  loggers = [ "akka.event.slf4j.Slf4jLogger" ]
  logger-startup-timeout = 60s
  actor.warn-about-java-serializer-usage = false

  actor {
    provider = "akka.remote.RemoteActorRefProvider"
  }
  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      hostname = "127.0.0.1"
      port = 0
    }
  }
}

